{"version":3,"sources":["components/layout/RightActionBar/index.js","components/Button/Button.js","services/service.js","components/InputText/InputText.js","components/DragDrop/DragDrop.js","views/pages/TemplateView/TemplateAdd/components/TemplateForm/index.js","views/pages/TemplateView/TemplateAdd/components/TemplatePreview/index.js","enums/fileFormats.js","components/Divider/Divider.js","views/pages/TemplateView/TemplateAdd/index.js","components/Header/Header.js","views/pages/TemplateView/TemplateList/TemplateTest/JsonInputText.js","views/pages/TemplateView/TemplateList/TemplateTest/Performance/index.js","views/pages/TemplateView/TemplateList/TemplateTest/ReportGenerator/index.js","views/pages/TemplateView/TemplateList/TemplateTest/index.js","views/pages/TemplateView/TemplateList/index.js","views/pages/TemplateView/index.js","assets/logo.png","components/layout/NavBar/NavBar.js","components/layout/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["RightActionBar","children","others","className","colors","primary","secondary","tertiary","error","sizes","xs","s","Button","variant","size","customStyle","disabled","onClick","templateUrl","reportUrl","saveTemplate","template","a","fetch","method","body","JSON","stringify","headers","response","json","listTemplates","getTemplate","name","uploadTemplate","description","formData","FormData","append","deleteTemplate","downloadTemplate","generateReport","data","perfTestReport","count","perfList","InputText","onChange","onKeyPress","value","label","placeholder","id","labelStyle","maxLength","htmlFor","type","fileTypes","DragDrop","onDrop","classes","handleChange","file","types","TemplateForm","dispatchTemplate","save","doesNameExist","exist","isUpdate","handleUpload","payload","e","val","target","replace","length","TemplatePreview","jsonContainer","useRef","useEffect","current","innerHTML","prettyPrintJson","toHtml","text","onCopy","alert","ref","EXCEL_2007","Divider","initialTemplate","format","sheets","createdBy","initTemplate","initialValues","RESET","reducer","state","action","index","key","parent","newRows","newState","defaultRow","splice","temp","Error","TemplateAdd","back","existingTemplate","useReducer","useState","showPreview","setShowPreview","setExist","status","console","handleDownload","filename","then","get","split","blob","download","Header","title","JsonInputText","setHasError","setJson","test","jsonObj","setJsonObj","handleUseLast","list","parse","height","width","Performance","hasError","setupRun","setSetupRun","perfData","setPerfData","getList","handlePerformance","prompt","regexNum","RegExp","handleShowList","map","perf","executedDateTime","reportCount","memoryInBytes","memoryInMB","elapsedTimeInMS","ReportGenerator","handleGenerate","defaultCustomStyles","content","top","left","right","bottom","marginRight","transform","TemplateTestModal","isOpen","customStyles","onClose","showPerf","setShowPerf","onRequestClose","style","TemplateList","handleUpdate","templates","setTemplates","testOpen","setTestOpen","fetchTemplates","deleteTemp","testTemp","TemplateTest","TemplateView","showAddUpdate","setShowAddUpdate","updateTemplate","setUpdateTemplate","setIsUpdate","NavBar","props","src","logo","Container","App","navigate","useNavigate","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2182b776.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst RightActionBar = ({ children, ...others }) => {\n  return (\n    <div className=\"m-2 w-full\">\n      <div className=\"flex pr-4\" {...others}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nRightActionBar.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default RightActionBar;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst colors = {\n  primary: \"bg-black text-white hover:bg-gray-600\",\n  secondary: \"bg-blue-600 text-white hover:bg-blue-400\",\n  tertiary: \"bg-yellow-600 text-white hover:bg-yellow-400\",\n  error: \"bg-red-600 text-white hover:bg-red-400\",\n};\n\nconst sizes = {\n  xs: \"h-10 w-28\",\n  s: \"h-12 w-32\",\n};\n\nconst Button = ({\n  variant = \"primary\",\n  size = \"s\",\n  children,\n  customStyle = \"\",\n  disabled = false,\n  className,\n  onClick = () => {},\n}) => {\n  return (\n    <>\n      {disabled ? (\n        <button\n          onClick={onClick}\n          className={\n            `bg-gray-500 text-white cursor-not-allowed ${sizes[size]} ` +\n            className\n          }\n          disabled={disabled}\n        >\n          {children}\n        </button>\n      ) : (\n        <button\n          onClick={onClick}\n          className={\n            `${colors[variant]} ${sizes[size]} ${customStyle}` + className\n          }\n          disabled={disabled}\n        >\n          {children}\n        </button>\n      )}\n    </>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.element,\n  customStyle: PropTypes.string,\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  variant: PropTypes.oneOf([\"primary\", \"secondary\", \"tertiary\"]),\n  disabled: PropTypes.bool,\n  className: PropTypes.object,\n};\n\nexport default Button;\n","const templateUrl = \"/api/template\";\nconst reportUrl = \"/api/report\";\n\nconst saveTemplate = async (template) => {\n  const response = await fetch(`${templateUrl}`, {\n    method: \"POST\",\n    body: JSON.stringify(template),\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return response.json();\n};\n\nconst listTemplates = async () => {\n  const response = await fetch(`${templateUrl}`, {\n    method: \"GET\",\n  });\n  return response.json();\n};\n\nconst getTemplate = async (name) => {\n  const response = await fetch(`${templateUrl}/${name}`, {\n    method: \"GET\",\n  });\n  return response;\n};\n\nconst uploadTemplate = async (template, name, description) => {\n  let formData = new FormData();\n  formData.append(\"file\", template);\n  if (name) {\n    formData.append(\"name\", name);\n  }\n  if (description) {\n    formData.append(\"description\", description);\n  }\n  const response = await fetch(`${templateUrl}/upload`, {\n    method: \"POST\",\n    body: formData,\n  });\n  return response.json();\n};\n\nconst deleteTemplate = async (name) => {\n  const response = await fetch(`${templateUrl}/${name}`, {\n    method: \"DELETE\",\n  });\n  return response.json();\n};\n\nconst downloadTemplate = async (name) => {\n  const response = await fetch(`${templateUrl}/download/${name}`, {\n    method: \"POST\",\n  });\n  return response;\n};\n\nconst generateReport = async (name, data) => {\n  const response = await fetch(`${reportUrl}/generate/${name}`, {\n    method: \"POST\",\n    body: data,\n  });\n  return response;\n};\n\nconst perfTestReport = async (name, data, count = 1) => {\n  const response = await fetch(\n    `${reportUrl}/performance/generate/${name}/${count}`,\n    {\n      method: \"POST\",\n      body: data,\n    }\n  );\n  return response.json();\n};\n\nconst perfList = async (name) => {\n  const response = await fetch(`${reportUrl}/performance/${name}`, {\n    method: \"GET\",\n  });\n  return response.json();\n};\n\nexport {\n  saveTemplate,\n  listTemplates,\n  uploadTemplate,\n  deleteTemplate,\n  generateReport,\n  getTemplate,\n  perfTestReport,\n  perfList,\n  downloadTemplate,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst InputText = ({\n  onChange,\n  onKeyPress,\n  value,\n  label,\n  placeholder,\n  id,\n  labelStyle,\n  disabled,\n  maxLength,\n  ...others\n}) => {\n  return (\n    <div className=\"flex w-full mb-6 md:mb-0\">\n      {label && (\n        <label\n          className={`block tracking-wide text-gray-700 text-lg m-2 text-right ${labelStyle}`}\n          htmlFor={id}\n        >\n          {label}\n        </label>\n      )}\n      <input\n        className={`appearance-none block w-full ${\n          disabled ? \"bg-gray-400\" : \"bg-gray-200\"\n        } text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white`}\n        id={id}\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        disabled={disabled}\n        maxLength={maxLength}\n        {...others}\n      />\n    </div>\n  );\n};\n\nInputText.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  label: PropTypes.string,\n  labelStyle: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onKeyPress: PropTypes.func,\n  disabled: PropTypes.bool,\n  maxLength: PropTypes.number,\n};\n\nexport default InputText;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FileUploader } from \"react-drag-drop-files\";\n\nconst fileTypes = [\"XLS\", \"XLSX\"];\n\nconst DragDrop = ({ onDrop }) => {\n  const handleChange = (file) => {\n    onDrop(file);\n  };\n\n  return (\n    <FileUploader\n      classes=\"h-full\"\n      handleChange={handleChange}\n      name=\"file\"\n      types={fileTypes}\n    />\n  );\n};\n\nDragDrop.propTypes = {\n  onDrop: PropTypes.func,\n};\n\nexport default DragDrop;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport InputText from \"../../../../../../components/InputText/InputText\";\nimport DragDrop from \"../../../../../../components/DragDrop/DragDrop\";\nimport { uploadTemplate } from \"../../../../../../services/service\";\nimport Button from \"../../../../../../components/Button/Button\";\n\nconst TemplateForm = ({\n  template,\n  dispatchTemplate,\n  save,\n  doesNameExist,\n  exist,\n  isUpdate,\n}) => {\n  const handleUpload = async (file) => {\n    const json = await uploadTemplate(\n      file,\n      template.name,\n      template.description\n    );\n    dispatchTemplate({ type: \"JSON\", payload: json });\n  };\n\n  return (\n    <div className=\"w-full p-4\">\n      <div className=\"mb-2 text-left\">\n        <text className=\"text-lg font-bold\">Template Structure</text>\n        <text> - Start by uploading your excel file template</text>\n      </div>\n      <div className=\"mb-6 w-full text-left\">\n        <DragDrop onDrop={handleUpload} />\n      </div>\n      <div className=\"w-full max-w-lg\">\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <InputText\n            label={\"*Name:\"}\n            id={\"name\"}\n            onChange={(e) => {\n              const val = e.target.value?.replace(\" \", \"\");\n              dispatchTemplate({\n                type: \"UPDATE\",\n                payload: {\n                  ...template,\n                  name: val,\n                },\n              });\n              if (val && val.length >= 6) {\n                doesNameExist(val);\n              }\n            }}\n            value={template.name}\n            maxLength={20}\n            placeholder=\"Enter template name without spaces (min 6 , max 20 char)\"\n            disabled={isUpdate}\n          />\n          {exist && template.name?.length >= 6 && (\n            <span className=\"flex flex-wrap m-1 text-red-400 text-sm\">\n              Name {template.name} already exist.\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"w-full max-w-lg\">\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <InputText\n            label={\"*Description:\"}\n            id={\"description\"}\n            onChange={(e) => {\n              dispatchTemplate({\n                type: \"UPDATE\",\n                payload: { ...template, description: e.target.value },\n              });\n            }}\n            value={template.description}\n            maxLength={300}\n            placeholder=\"Enter description (max 300 char)\"\n          />\n        </div>\n      </div>\n      <div className=\"w-full max-w-lg\">\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <Button\n            disabled={\n              !template.name ||\n              !template.description ||\n              template.name.length < 6 ||\n              exist\n            }\n            onClick={() => save()}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTemplateForm.propTypes = {\n  dispatchTemplate: PropTypes.func,\n  template: PropTypes.object,\n  save: PropTypes.func,\n  doesNameExist: PropTypes.func,\n  exist: PropTypes.bool,\n  isUpdate: PropTypes.bool,\n};\n\nexport default TemplateForm;\n","import PropTypes from \"prop-types\";\nimport React, { useRef, useEffect } from \"react\";\nimport { prettyPrintJson } from \"pretty-print-json\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst TemplatePreview = ({ template = {} }) => {\n  const jsonContainer = useRef(null);\n\n  useEffect(() => {\n    jsonContainer.current.innerHTML = prettyPrintJson.toHtml(template);\n  });\n\n  return (\n    <div className=\"flex-grow w-full text-left p-4 border-l-2 border-solid\">\n      <text className=\"text-lg font-bold\">Preview</text>\n      <text> - This is a preview of your report</text>\n      <div className=\"p-2\">\n        <CopyToClipboard\n          className=\"bg-green-500 hover:cursor-pointer p-2 rounded-md\"\n          text={JSON.stringify(template)}\n          onCopy={() => alert(\"Copy to Clipboard was successful.\")}\n        >\n          <span>Copy JSON to Clipboard</span>\n        </CopyToClipboard>\n      </div>\n      <div className=\"border-gray-400 border-solid\">\n        <div className=\"w-full text-left mt-2\">\n          <pre\n            className=\"relative rounded-xl overflow-auto p-4\"\n            ref={jsonContainer}\n          ></pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTemplatePreview.propTypes = {\n  template: PropTypes.object,\n};\n\nexport default TemplatePreview;\n","const EXCEL_2003 = \"xls\";\nconst EXCEL_2007 = \"xlsx\";\n\nexport const selectFormats = [\n  { label: \"MS Excel 2007 - XLSX\", value: EXCEL_2007 },\n  { label: \"MS Excel 2003 - XLS\", value: EXCEL_2003 },\n];\nexport { EXCEL_2007, EXCEL_2003 };\n","import React from \"react\";\n\nconst Divider = () => (\n  <div className=\"relative flex py-5 items-center m-3\">\n    <div className=\"flex-grow border-t border-gray-200\"></div>\n  </div>\n);\n\nexport default Divider;\n","import PropTypes from \"prop-types\";\nimport React, { useReducer, useState } from \"react\";\nimport Button from \"../../../../components/Button/Button\";\nimport {\n  downloadTemplate,\n  getTemplate,\n  saveTemplate,\n} from \"../../../../services/service\";\nimport TemplateForm from \"./components/TemplateForm\";\nimport TemplatePreview from \"./components/TemplatePreview\";\nimport { EXCEL_2007 } from \"../../../../enums/fileFormats\";\nimport download from \"downloadjs\";\nimport Divider from \"../../../../components/Divider/Divider\";\n\nconst initialTemplate = {\n  name: null,\n  description: null,\n  format: EXCEL_2007,\n  sheets: [],\n  createdBy: \"Jed Dayo\",\n};\n\nconst initTemplate = (initialValues) => {\n  return { ...initialValues };\n};\n\nconst UPDATE = \"UPDATE\";\nconst UPDATE_ROW = \"UPDATE_ROW\";\nconst ADD_ROW = \"ADD_ROW\";\nconst DELETE_ROW = \"DELETE_ROW\";\nconst MOVE_COLUMN_DOWN = \"MOVE_COLUMN_DOWN\";\nconst MOVE_COLUMN_UP = \"MOVE_COLUMN_UP\";\nconst RESET = \"RESET\";\nconst JSON = \"JSON\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE:\n      return { ...state, ...action.payload };\n    case UPDATE_ROW: {\n      const { index, key, value, parent } = action.payload;\n      const newRows = [...state[parent]];\n      newRows[index][key] = value;\n      const newState = { ...state };\n      newState[parent] = newRows;\n      return { ...state, ...newState };\n    }\n    case ADD_ROW: {\n      const { parent, defaultRow } = action.payload;\n      const newState = { ...state };\n      newState[parent] = [...state[parent], defaultRow];\n      return {\n        ...newState,\n      };\n    }\n    case DELETE_ROW: {\n      const { index, parent } = action.payload;\n      const newRows = [...state[parent]];\n      const newState = { ...state };\n      newRows.splice(index, 1);\n      newState[parent] = [...newRows];\n      return {\n        ...newState,\n      };\n    }\n    case MOVE_COLUMN_DOWN: {\n      const { index, parent } = action.payload;\n      const newRows = [...state[parent]];\n      newRows[index].index = newRows[index].index + 1;\n      newRows[index + 1].index = newRows[index + 1].index - 1;\n      const temp = newRows[index];\n      newRows[index] = newRows[index + 1];\n      newRows[index + 1] = temp;\n      const newState = { ...state };\n      newState[parent] = [...newRows];\n      return {\n        ...newState,\n      };\n    }\n    case MOVE_COLUMN_UP: {\n      const { index, parent } = action.payload;\n      const newRows = [...state[parent]];\n      newRows[index].index = newRows[index].index - 1;\n      newRows[index - 1].index = newRows[index - 1].index + 1;\n      const temp = newRows[index];\n      newRows[index] = newRows[index - 1];\n      newRows[index - 1] = temp;\n      const newState = { ...state };\n      newState[parent] = [...newRows];\n      return {\n        ...newState,\n      };\n    }\n    case RESET: {\n      return {\n        ...initTemplate(initialTemplate),\n      };\n    }\n    case JSON: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst TemplateAdd = ({ back, existingTemplate, isUpdate }) => {\n  const [template, dispatchTemplate] = useReducer(\n    reducer,\n    existingTemplate || initialTemplate,\n    initTemplate\n  );\n  const [showPreview, setShowPreview] = useState(false);\n  const [exist, setExist] = useState();\n\n  const doesNameExist = async (name) => {\n    try {\n      const response = await getTemplate(name);\n      if (response.status === 200) {\n        setExist(true);\n      } else {\n        setExist(false);\n      }\n    } catch (e) {\n      setExist(false);\n    }\n  };\n\n  const save = async () => {\n    try {\n      await saveTemplate(template);\n      back();\n      dispatchTemplate({ type: RESET });\n    } catch (e) {\n      console.error(e);\n      alert(\"Error saving the template. Unable to contact server.\");\n    }\n  };\n\n  const handleDownload = async () => {\n    let filename = null;\n    downloadTemplate(template.name)\n      .then((response) => {\n        if (response.status === 200) {\n          filename = response.headers\n            .get(\"content-disposition\")\n            .split(\";\")[1]\n            .split(\"=\")[1];\n          return response.blob();\n        } else {\n          return;\n        }\n      })\n      .then((body) => {\n        download(body, filename, \"application/octet-stream\");\n      });\n  };\n\n  return (\n    <div className=\"m-2 w-full h-full\">\n      <Divider />\n      <div className=\"w-full h-full border-l border-gray-200 gap-2 flex justify-end\">\n        {isUpdate && (\n          <Button variant=\"tertiary\" onClick={handleDownload}>\n            Download Template\n          </Button>\n        )}\n        <Button\n          variant=\"tertiary\"\n          onClick={() => setShowPreview(!showPreview)}\n          className={\"mr-3\"}\n        >{`${showPreview ? \"Close Preview\" : \"Open Preview\"}`}</Button>\n      </div>\n      <Divider />\n      <div className=\"m-2 flex w-full h-full\">\n        <TemplateForm\n          template={template}\n          dispatchTemplate={dispatchTemplate}\n          save={save}\n          doesNameExist={doesNameExist}\n          exist={exist}\n          isUpdate={isUpdate}\n        />\n        {showPreview && <TemplatePreview template={template} />}\n      </div>\n    </div>\n  );\n};\n\nTemplateAdd.propTypes = {\n  back: PropTypes.func,\n  existingTemplate: PropTypes.object,\n  isUpdate: PropTypes.bool,\n};\n\nexport default TemplateAdd;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Header = ({ title, ...others }) => {\n  return (\n    <div\n      className=\"font-sans text-lg text-white bg-blue-400 p-2 flex\"\n      {...others}\n    >\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport JSONInput from \"react-json-editor-ajrm\";\nimport { perfList } from \"../../../../../services/service\";\n\nconst JsonInputText = ({ setHasError, setJson, template }) => {\n  const [jsonObj, setJsonObj] = useState({ test: \"excel\" });\n\n  const onChange = ({ json, error }) => {\n    if (error) {\n      setHasError(true);\n    }\n    setJsonObj(JSON.parse(json));\n    setJson(json);\n  };\n\n  const handleUseLast = async () => {\n    const list = await perfList(template.name);\n    if (!list || list.length === 0) {\n      alert(\"No last sample data used.\");\n      return;\n    }\n    setJsonObj(JSON.parse(list[0].data));\n    setJson(list[0].data);\n  };\n\n  return (\n    <div className=\"p-2\">\n      <span\n        className=\"text-lg cursor-pointer underline text-blue-500\"\n        onClick={handleUseLast}\n      >\n        use last sample\n      </span>\n      <JSONInput\n        id={template.name}\n        placeholder={jsonObj}\n        height={\"550px\"}\n        width={\"700px\"}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nJsonInputText.propTypes = {\n  setHasError: PropTypes.func,\n  setJson: PropTypes.func,\n  template: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n\nexport default JsonInputText;\n","import PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../../../../../../components/Button/Button\";\nimport { perfTestReport, perfList } from \"../../../../../../services/service\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport JsonInputText from \"../JsonInputText\";\n\nconst Performance = ({ template }) => {\n  const [json, setJson] = useState();\n  const [hasError, setHasError] = useState(false);\n  const [setupRun, setSetupRun] = useState(false);\n  const [perfData, setPerfData] = useState([]);\n\n  const getList = async () => {\n    const list = await perfList(template.name);\n    setPerfData(list);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const handlePerformance = async () => {\n    let count = prompt(\"How many reports? enter valid number\", 1);\n    const regexNum = new RegExp(\"^[0-9]*$\");\n    if (count && regexNum.test(count) && count <= 100) {\n      await perfTestReport(template.name, json, count);\n      handleShowList();\n    } else {\n      alert(\"Not a valid count, max is 100\");\n    }\n  };\n\n  const handleShowList = () => {\n    setSetupRun(false);\n    getList();\n  };\n\n  return (\n    <>\n      {!setupRun && (\n        <div className=\"m-2 w-full h-full\">\n          <table className=\"table-auto w-full text-sm\">\n            <thead>\n              <tr className=\"border-b dark:border-slate-600 font-medium p-4 pl-8 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left\">\n                <th width={\"20%\"}>Run Date</th>\n                <th width={\"15%\"}>Count</th>\n                <th width={\"10%\"}>Memory Consumption (bytes)</th>\n                <th width={\"10%\"}>Memory Consumption (mb)</th>\n                <th width={\"10%\"}>Execution time (ms)</th>\n                <th width={\"20%\"}></th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-slate-800\">\n              {perfData &&\n                perfData.map((perf, index) => (\n                  <tr className=\"text-left\" key={`row-${index}`}>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      {perf.executedDateTime}\n                    </td>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      {perf.reportCount}\n                    </td>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      {perf.memoryInBytes}\n                    </td>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      {perf.memoryInMB}\n                    </td>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      {perf.elapsedTimeInMS}\n                    </td>\n                    <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                      <div className=\"flex gap-2 space-x-8\">\n                        <CopyToClipboard\n                          className=\"bg-green-500 hover:cursor-pointer p-2 rounded-md\"\n                          text={perf.data}\n                          onCopy={() =>\n                            alert(\"Copy to Clipboard was successful.\")\n                          }\n                        >\n                          <span>Copy test data</span>\n                        </CopyToClipboard>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n          <div className=\"p-2 flex gap-2\">\n            <Button variant=\"tertiary\" onClick={() => setSetupRun(true)}>\n              Setup Test Run\n            </Button>\n          </div>\n        </div>\n      )}\n      {setupRun && (\n        <>\n          <div className=\"p-2\">\n            <div className=\"p-2\">\n              <JsonInputText\n                setHasError={setHasError}\n                setJson={setJson}\n                template={template}\n              />\n            </div>\n          </div>\n          <div className=\"p-2 flex gap-2\">\n            <Button\n              variant=\"tertiary\"\n              onClick={handlePerformance}\n              disabled={hasError}\n            >\n              Run Test\n            </Button>\n            <Button variant=\"tertiary\" onClick={handleShowList}>\n              Show History\n            </Button>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nPerformance.propTypes = {\n  customStyles: PropTypes.object,\n  template: PropTypes.object,\n};\n\nexport default Performance;\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport Button from \"../../../../../../components/Button/Button\";\nimport { generateReport } from \"../../../../../../services/service\";\nimport download from \"downloadjs\";\nimport JsonInputText from \"../JsonInputText\";\n\nconst ReportGenerator = ({ template }) => {\n  const [json, setJson] = useState();\n  const [hasError, setHasError] = useState(false);\n\n  const handleGenerate = async () => {\n    let filename = null;\n    generateReport(template.name, json)\n      .then((response) => {\n        if (response.status === 200) {\n          filename = response.headers\n            .get(\"content-disposition\")\n            .split(\";\")[1]\n            .split(\"=\")[1];\n          return response.blob();\n        } else {\n          return;\n        }\n      })\n      .then((body) => {\n        download(body, filename, \"application/octet-stream\");\n      });\n  };\n\n  return (\n    <>\n      <div className=\"p-2\">\n        <div className=\"p-2\">\n          <JsonInputText\n            setHasError={setHasError}\n            setJson={setJson}\n            template={template}\n          />\n        </div>\n      </div>\n      <div className=\"p-2 flex gap-2\">\n        <Button variant=\"tertiary\" onClick={handleGenerate} disabled={hasError}>\n          Generate Report\n        </Button>\n      </div>\n    </>\n  );\n};\n\nReportGenerator.propTypes = {\n  customStyles: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  template: PropTypes.object,\n};\n\nexport default ReportGenerator;\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal/lib/components/Modal\";\nimport { IoCloseCircle } from \"react-icons/io5\";\nimport Header from \"../../../../../components/Header/Header\";\nimport Performance from \"./Performance/index\";\nimport ReportGenerator from \"./ReportGenerator\";\nimport RightActionBar from \"../../../../../components/layout/RightActionBar/index\";\nimport Button from \"../../../../../components/Button/Button\";\nimport Divider from \"../../../../../components/Divider/Divider\";\n\nconst defaultCustomStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n  },\n};\n\nconst TemplateTestModal = ({\n  template,\n  isOpen,\n  customStyles = defaultCustomStyles,\n  onClose,\n}) => {\n  const [showPerf, setShowPerf] = useState(false);\n\n  return (\n    <div className=\"w-full\">\n      <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n        <button onClick={onClose} className=\"absolute top-0 right-0 text-xl\">\n          <IoCloseCircle />\n        </button>\n        <Header title={`Test Your Template - ${template.name}`} />\n        <div className=\"w-full\">\n          <RightActionBar>\n            <Button onClick={() => setShowPerf(!showPerf)} variant=\"error\">{`${\n              showPerf ? \"<< Back to Generator\" : \"Show Performance >>\"\n            }`}</Button>\n          </RightActionBar>\n        </div>\n        <Divider />\n        {showPerf && <Performance template={template} />}\n        {!showPerf && <ReportGenerator template={template} />}\n      </Modal>\n    </div>\n  );\n};\n\nTemplateTestModal.propTypes = {\n  customStyles: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  template: PropTypes.object,\n};\n\nexport default TemplateTestModal;\n","import PropTypes from \"prop-types\";\nimport React,{useEffect,  useState} from \"react\";\nimport { deleteTemplate, listTemplates } from \"../../../../services/service\";\nimport Button from \"../../../../components/Button/Button\";\nimport TemplateTestModal from \"./TemplateTest/index\";\n\nconst TemplateList = ({ handleUpdate }) => {\n  const [templates, setTemplates] = useState([]);\n  const [testOpen, setTestOpen] = useState();\n\n  const fetchTemplates = async () => {\n    try {\n      const response = await listTemplates();\n      setTemplates(response);\n    } catch (e) {\n      console.error(e);\n      alert(\"Error fetching templates. Unable to contact server.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchTemplates();\n  }, []);\n\n  const deleteTemp = async (name) => {\n    try {\n      await deleteTemplate(name);\n      alert(`Delete was successful of template - ${name}.`);\n      fetchTemplates();\n    } catch (e) {\n      console.error(e);\n      alert(\"Error fetching templates. Unable to contact server.\");\n    }\n  };\n\n  const testTemp = (template) => {\n    setTestOpen(template);\n  };\n\n  return (\n    <div className=\"m-2 w-full h-full\">\n      <table className=\"table-auto w-full text-sm\">\n        <thead>\n          <tr className=\"border-b dark:border-slate-600 font-medium p-4 pl-8 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left\">\n            <th width={\"20%\"}>Name</th>\n            <th width={\"15%\"}>Format</th>\n            <th width={\"20%\"}>Description</th>\n            <th width={\"10%\"}>Action</th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white dark:bg-slate-800\">\n          {templates &&\n            templates.map((template, index) => (\n              <tr className=\"text-left\" key={`row-${index}`}>\n                <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                  {template.name}\n                </td>\n                <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                  {template.format}\n                </td>\n                <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                  {template.description}\n                </td>\n                <td className=\"border-b border-slate-100 dark:border-slate-700 p-2\">\n                  <div className=\"flex gap-2 space-x-8\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleUpdate(template)}\n                    >\n                      Update\n                    </Button>\n                    <Button\n                      variant=\"error\"\n                      onClick={() => deleteTemp(template.name)}\n                    >\n                      Delete\n                    </Button>\n                    <Button\n                      variant=\"tertiary\"\n                      onClick={() => testTemp(template)}\n                    >\n                      Test\n                    </Button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {testOpen && (\n        <TemplateTestModal\n          template={testOpen}\n          isOpen={testOpen}\n          onClose={() => setTestOpen(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nTemplateList.propTypes = {\n  templates: PropTypes.array,\n  handleUpdate: PropTypes.func,\n};\n\nexport default TemplateList;\n","import React, { useState } from \"react\";\nimport RightActionBar from \"../../../components/layout/RightActionBar\";\nimport Button from \"../../../components/Button/Button\";\nimport TemplateAdd from \"./TemplateAdd/index\";\nimport TemplateList from \"./TemplateList\";\n\nconst TemplateView = () => {\n  const [showAddUpdate, setShowAddUpdate] = useState();\n  const [updateTemplate, setUpdateTemplate] = useState();\n  const [isUpdate, setIsUpdate] = useState();\n\n  const handleAdd = () => {\n    if (showAddUpdate) {\n      setShowAddUpdate(false);\n    } else {\n      setShowAddUpdate(true);\n      setIsUpdate(false);\n      setUpdateTemplate(null);\n    }\n  };\n\n  const handleUpdate = (template) => {\n    setUpdateTemplate(template);\n    setShowAddUpdate(true);\n    setIsUpdate(true);\n  };\n\n  return (\n    <div>\n      <div className=\"w-full\">\n        <RightActionBar>\n          <Button onClick={handleAdd} variant=\"secondary\">{`${\n            showAddUpdate ? \"Back to Dashboard\" : \"Add Template\"\n          }`}</Button>\n        </RightActionBar>\n      </div>\n      {showAddUpdate && (\n        <TemplateAdd\n          back={() => setShowAddUpdate(false)}\n          existingTemplate={updateTemplate}\n          isUpdate={isUpdate}\n        />\n      )}\n      {!showAddUpdate && <TemplateList handleUpdate={handleUpdate} />}\n    </div>\n  );\n};\n\nexport default TemplateView;\n","export default __webpack_public_path__ + \"static/media/logo.dd0d67be.png\";","import React from \"react\";\nimport logo from \"../../../assets/logo.png\";\n\nconst NavBar = ({ ...props }) => {\n  return (\n    <div className=\"w-full flex bg-blue-500 text-white h-20\" {...props}>\n      <img src={logo} className=\"m-3\" />\n      <div className=\"m-auto\">Template Report Maintenance</div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Container = ({ children }) => {\n  return <div className=\"w-full h-full\">{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport TemplateView from './views/pages/TemplateView';\nimport { Routes, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar/NavBar';\nimport Container from './components/layout/Container/Container';\nimport Divider from './components/Divider/Divider';\nimport { useNavigate } from 'react-router-dom';\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/');\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Divider />\n      <Container>\n        <Routes>\n          <Route exact path=\"/\" element={<TemplateView />} />\n        </Routes>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { makeServer } from \"./mock/server\";\n\nif (process.env.NODE_ENV === \"development\") {\n  makeServer({ environment: \"development\" });\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}